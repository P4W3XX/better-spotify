# Generated by Django 5.2 on 2025-04-20 18:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/')),
                ('type', models.CharField(choices=[('artist', 'Artist'), ('listener', 'Listener')], default='listener', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='albums/')),
                ('release_date', models.DateField(default='2023-01-01')),
                ('album_type', models.CharField(choices=[('single', 'Single'), ('album', 'Album'), ('ep', 'EP')], default='album', max_length=50)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='albums', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('duration', models.DurationField()),
                ('file', models.FileField(upload_to='songs/')),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('track_number', models.PositiveIntegerField()),
                ('plays', models.PositiveIntegerField(default=0)),
                ('is_indecent', models.BooleanField(default=False)),
                ('genre', models.CharField(choices=[('pop', 'Pop'), ('rock', 'Rock'), ('hip-hop', 'Hip-Hop'), ('jazz', 'Jazz'), ('blues', 'Blues'), ('country', 'Country'), ('electronic', 'Electronic'), ('reggae', 'Reggae'), ('rap', 'Rap'), ('r&b', 'R&B'), ('classical', 'Classical'), ('other', 'Other')], default='other', max_length=50)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='api.album')),
                ('featured_artists', models.ManyToManyField(blank=True, related_name='featured_songs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentPlayback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('is_paused', models.BooleanField(default=False)),
                ('paused_at', models.DateTimeField(blank=True, null=True)),
                ('progress_seconds', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_playback', to=settings.AUTH_USER_MODEL)),
                ('song', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_playback_song', to='api.song')),
            ],
        ),
        migrations.CreateModel(
            name='SongPlayback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playbacks', to='api.song')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song_playbacks', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
